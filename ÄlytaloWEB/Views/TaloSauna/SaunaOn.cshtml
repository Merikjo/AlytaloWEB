@model ÄlytaloWEB.ViewModels.SaunaViewModel

@{
    ViewBag.Title = "SaunaOn";
}

<h2>SaunaOn</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TaloSauna</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Sauna_ID)

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.SaunaNro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaunaNro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaunaNro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SaunanNimi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaunanNimi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaunanNimi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.SaunanTila, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SaunanTila)
                    @Html.ValidationMessageFor(model => model.SaunanTila, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.SaunaStart, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaunaStart, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaunaStart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" value="SAUNA ON" class="btn btn-default" />
            </div>
        </div>
    </div>


<div class="form-horizontal">
    @*<h4>TaloSauna</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Sauna_ID)

    <div class="form-group" hidden>
            @Html.LabelFor(model => model.SaunaNro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SaunaNro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SaunaNro, "", new { @class = "text-danger" })
            </div>
        </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.SaunanNimi, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SaunanNimi, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SaunanNimi, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.SaunanTila, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.SaunanTila)
                @Html.ValidationMessageFor(model => model.SaunanTila, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group" hidden>
        @Html.LabelFor(model => model.SaunaStop, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SaunaStop, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SaunaStop, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-1">
            <input type="submit" value="SAUNA OFF" class="btn btn-default" />
        </div>
    </div>
</div>

}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
